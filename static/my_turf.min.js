!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turf=e()}(function(){return function n(o,i,a){function s(t,e){if(!i[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(u)return u(t,!0);throw(r=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",r}r=i[t]={exports:{}},o[t][0].call(r.exports,function(e){return s(o[t][1][e]||e)},r,r.exports,n,o,i,a)}return i[t].exports}for(var u="function"==typeof require&&require,e=0;e<a.length;e++)s(a[e]);return s}({1:[function(e,t,r){t.exports={meta:e("@turf/meta"),greatCircle:e("@turf/great-circle"),distance:e("@turf/distance").default,booleanPointInPolygon:e("@turf/boolean-point-in-polygon").default,helpers:e("@turf/helpers")}},{"@turf/boolean-point-in-polygon":2,"@turf/distance":3,"@turf/great-circle":4,"@turf/helpers":5,"@turf/meta":7}],2:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var c=e("@turf/invariant");function f(e,t,r){for(var n=!1,o=0,i=(t=t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]?t.slice(0,t.length-1):t).length-1;o<t.length;i=o++){var a=t[o][0],s=t[o][1],u=t[i][0],l=t[i][1];if(e[1]*(a-u)+s*(u-e[0])+l*(e[0]-a)==0&&(a-e[0])*(u-e[0])<=0&&(s-e[1])*(l-e[1])<=0)return!r;s>e[1]!=l>e[1]&&e[0]<(u-a)*(e[1]-s)/(l-s)+a&&(n=!n)}return n}r.default=function(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var n,o=c.getCoord(e),e=(n=c.getGeom(t)).type,t=t.bbox,i=n.coordinates;if(t&&!1==(n=o,(t=t)[0]<=n[0]&&t[1]<=n[1]&&t[2]>=n[0]&&t[3]>=n[1]))return!1;"Polygon"===e&&(i=[i]);for(var a=!1,s=0;s<i.length&&!a;s++)if(f(o,i[s][0],r.ignoreBoundary)){for(var u=!1,l=1;l<i[s].length&&!u;)f(o,i[s][l],!r.ignoreBoundary)&&(u=!0),l++;u||(a=!0)}return a}},{"@turf/invariant":6}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var i=e("@turf/invariant"),a=e("@turf/helpers");r.default=function(e,t,r){void 0===r&&(r={});var n=i.getCoord(e),o=i.getCoord(t),e=a.degreesToRadians(o[1]-n[1]),t=a.degreesToRadians(o[0]-n[0]),n=a.degreesToRadians(n[1]),o=a.degreesToRadians(o[1]),o=Math.pow(Math.sin(e/2),2)+Math.pow(Math.sin(t/2),2)*Math.cos(n)*Math.cos(o);return a.radiansToLength(2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o)),r.units)}},{"@turf/helpers":5,"@turf/invariant":6}],4:[function(e,t,r){"use strict";function o(e,t){this.lon=e,this.lat=t,this.x=n*e,this.y=n*t}var i=e("@turf/invariant"),n=Math.PI/180,a=180/Math.PI;o.prototype.view=function(){return String(this.lon).slice(0,4)+","+String(this.lat).slice(0,4)},o.prototype.antipode=function(){var e=-1*this.lat,t=this.lon<0?180+this.lon:-1*(180-this.lon);return new o(t,e)};function A(){this.coords=[],this.length=0}A.prototype.move_to=function(e){this.length++,this.coords.push(e)};function I(e){this.properties=e||{},this.geometries=[]}I.prototype.json=function(){if(this.geometries.length<=0)return{geometry:{type:"LineString",coordinates:null},type:"Feature",properties:this.properties};if(1===this.geometries.length)return{geometry:{type:"LineString",coordinates:this.geometries[0].coords},type:"Feature",properties:this.properties};for(var e=[],t=0;t<this.geometries.length;t++)e.push(this.geometries[t].coords);return{geometry:{type:"MultiLineString",coordinates:e},type:"Feature",properties:this.properties}},I.prototype.wkt=function(){for(var e="",t="LINESTRING(",r=function(e){t+=e[0]+" "+e[1]+","},n=0;n<this.geometries.length;n++){if(0===this.geometries[n].coords.length)return"LINESTRING(empty)";this.geometries[n].coords.forEach(r),e+=t.substring(0,t.length-1)+")"}return e};function s(e,t,r){if(!e||void 0===e.x||void 0===e.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");if(!t||void 0===t.x||void 0===t.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");this.start=new o(e.x,e.y),this.end=new o(t.x,t.y),this.properties=r||{};var n=this.start.x-this.end.x,r=this.start.y-this.end.y,n=Math.pow(Math.sin(r/2),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(n/2),2);if(this.g=2*Math.asin(Math.sqrt(n)),this.g===Math.PI)throw new Error("it appears "+e.view()+" and "+t.view()+" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite");if(isNaN(this.g))throw new Error("could not calculate great circle between "+e+" and "+t)}s.prototype.interpolate=function(e){var t=Math.sin((1-e)*this.g)/Math.sin(this.g),r=Math.sin(e*this.g)/Math.sin(this.g),n=t*Math.cos(this.start.y)*Math.cos(this.start.x)+r*Math.cos(this.end.y)*Math.cos(this.end.x),e=t*Math.cos(this.start.y)*Math.sin(this.start.x)+r*Math.cos(this.end.y)*Math.sin(this.end.x),r=t*Math.sin(this.start.y)+r*Math.sin(this.end.y),r=a*Math.atan2(r,Math.sqrt(Math.pow(n,2)+Math.pow(e,2)));return[a*Math.atan2(e,n),r]},s.prototype.Arc=function(e,t){var r=[];if(!e||e<=2)r.push([this.start.lon,this.start.lat]),r.push([this.end.lon,this.end.lat]);else for(var n=1/(e-1),o=0;o<e;++o){var i=n*o,i=this.interpolate(i);r.push(i)}for(var a=!1,s=0,t=t&&t.offset?t.offset:10,u=180-t,l=-180+t,c=360-t,f=1;f<r.length;++f){var h=r[f-1][0],g=r[f][0],d=Math.abs(g-h);c<d&&(u<g&&h<l||u<h&&g<l)?a=!0:s<d&&(s=d)}var p=[];if(a&&s<t){var y=[];p.push(y);for(var m=0;m<r.length;++m){var v,w,b,M,P,E=parseFloat(r[m][0]);0<m&&Math.abs(E-r[m-1][0])>c?(M=parseFloat(r[m-1][0]),P=parseFloat(r[m-1][1]),v=parseFloat(r[m][0]),b=parseFloat(r[m][1]),-180<M&&M<l&&180===v&&m+1<r.length&&-180<r[m-1][0]&&r[m-1][0]<l?(y.push([-180,r[m][1]]),m++,y.push([r[m][0],r[m][1]])):u<M&&M<180&&-180===v&&m+1<r.length&&r[m-1][0]>u&&r[m-1][0]<180?(y.push([180,r[m][1]]),m++,y.push([r[m][0],r[m][1]])):(M<l&&u<v&&(w=M,M=v,v=w,w=P,P=b,b=w),u<M&&v<l&&(v+=360),M<=180&&180<=v&&M<v?(P=(M=(180-M)/(v-M))*b+(1-M)*P,y.push([r[m-1][0]>u?180:-180,P]),(y=[]).push([r[m-1][0]>u?-180:180,P])):y=[],p.push(y),y.push([E,r[m][1]]))):y.push([r[m][0],r[m][1]])}}else{var x=[];p.push(x);for(var F=0;F<r.length;++F)x.push([r[F][0],r[F][1]])}for(var S=new I(this.properties),L=0;L<p.length;++L){var k=new A;S.geometries.push(k);for(var C=p[L],R=0;R<C.length;++R)k.move_to(C[R])}return S},t.exports=function(e,t,r){if("object"!=typeof(r=r||{}))throw new Error("options is invalid");var n=r.properties,o=r.npoints,r=r.offset;return e=i.getCoord(e),t=i.getCoord(t),n=n||{},o=o||100,r=r||10,new s({x:e[0],y:e[1]},{x:t[0],y:t[1]},n).Arc(o,{offset:r}).json()}},{"@turf/invariant":6}],5:[function(e,t,n){"use strict";function s(e,t,r){var n={type:"Feature"};return 0!==(r=void 0===r?{}:r).id&&!r.id||(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function o(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(e[0])||!d(e[1]))throw new Error("coordinates must contain numbers");return s({type:"Point",coordinates:e},t,r)}function i(e,t,r){void 0===r&&(r={});for(var n=0,o=e;n<o.length;n++){var i=o[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<i[i.length-1].length;a++)if(i[i.length-1][a]!==i[0][a])throw new Error("First and last Position are not equivalent.")}return s({type:"Polygon",coordinates:e},t,r)}function a(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return s({type:"LineString",coordinates:e},t,r)}function u(e,t){var r={type:"FeatureCollection"};return(t=void 0===t?{}:t).id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function l(e,t,r){return s({type:"MultiLineString",coordinates:e},t,r=void 0===r?{}:r)}function c(e,t,r){return s({type:"MultiPoint",coordinates:e},t,r=void 0===r?{}:r)}function f(e,t,r){return s({type:"MultiPolygon",coordinates:e},t,r=void 0===r?{}:r)}function h(e,t){void 0===t&&(t="kilometers");var r=n.factors[t];if(!r)throw new Error(t+" units is invalid");return e*r}function g(e,t){void 0===t&&(t="kilometers");var r=n.factors[t];if(!r)throw new Error(t+" units is invalid");return e/r}function r(e){return 180*(e%(2*Math.PI))/Math.PI}function d(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.earthRadius=6371008.8,n.factors={centimeters:100*n.earthRadius,centimetres:100*n.earthRadius,degrees:n.earthRadius/111325,feet:3.28084*n.earthRadius,inches:39.37*n.earthRadius,kilometers:n.earthRadius/1e3,kilometres:n.earthRadius/1e3,meters:n.earthRadius,metres:n.earthRadius,miles:n.earthRadius/1609.344,millimeters:1e3*n.earthRadius,millimetres:1e3*n.earthRadius,nauticalmiles:n.earthRadius/1852,radians:1,yards:n.earthRadius/1.0936},n.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/n.earthRadius,yards:1/1.0936},n.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},n.feature=s,n.geometry=function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return o(t).geometry;case"LineString":return a(t).geometry;case"Polygon":return i(t).geometry;case"MultiPoint":return c(t).geometry;case"MultiLineString":return l(t).geometry;case"MultiPolygon":return f(t).geometry;default:throw new Error(e+" is invalid")}},n.point=o,n.points=function(e,t,r){return void 0===r&&(r={}),u(e.map(function(e){return o(e,t)}),r)},n.polygon=i,n.polygons=function(e,t,r){return void 0===r&&(r={}),u(e.map(function(e){return i(e,t)}),r)},n.lineString=a,n.lineStrings=function(e,t,r){return void 0===r&&(r={}),u(e.map(function(e){return a(e,t)}),r)},n.featureCollection=u,n.multiLineString=l,n.multiPoint=c,n.multiPolygon=f,n.geometryCollection=function(e,t,r){return s({type:"GeometryCollection",geometries:e},t,r=void 0===r?{}:r)},n.round=function(e,t){if((t=void 0===t?0:t)&&!(0<=t))throw new Error("precision must be a positive number");return t=Math.pow(10,t||0),Math.round(e*t)/t},n.radiansToLength=h,n.lengthToRadians=g,n.lengthToDegrees=function(e,t){return r(g(e,t))},n.bearingToAzimuth=function(e){return(e%=360)<0&&(e+=360),e},n.radiansToDegrees=r,n.degreesToRadians=function(e){return e%360*Math.PI/180},n.convertLength=function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),!(0<=e))throw new Error("length must be a positive number");return h(g(e,t),r)},n.convertArea=function(e,t,r){if(void 0===t&&(t="meters"),void 0===r&&(r="kilometers"),!(0<=e))throw new Error("area must be a positive number");if(!(t=n.areaFactors[t]))throw new Error("invalid original units");if(!(r=n.areaFactors[r]))throw new Error("invalid final units");return e/t*r},n.isNumber=d,n.isObject=function(e){return!!e&&e.constructor===Object},n.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!d(e))throw new Error("bbox must only contain numbers")})},n.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},{}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers");r.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&2<=e.length&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},r.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},r.containsNumber=function e(t){if(1<t.length&&n.isNumber(t[0])&&n.isNumber(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")},r.geojsonType=function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)},r.featureOf=function(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)},r.collectionOf=function(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!i.geometry||i.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+i.geometry.type)}},r.getGeom=function(e){return"Feature"===e.type?e.geometry:e},r.getType=function(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":("Feature"===e.type&&null!==e.geometry?e.geometry:e).type}},{"@turf/helpers":5}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var d=e("@turf/helpers");function P(e,t,r){if(null!==e)for(var n,o,i,a,s,u,l,c=0,f=e.type,h="FeatureCollection"===f,g="Feature"===f,d=h?e.features.length:1,p=0;p<d;p++){a=(l=!!(u=h?e.features[p].geometry:g?e.geometry:e)&&"GeometryCollection"===u.type)?u.geometries.length:1;for(var y=0;y<a;y++){var m,v=0,w=0;if(null!==(m=l?u.geometries[y]:u)){s=m.coordinates;var b=m.type,M=!r||"Polygon"!==b&&"MultiPolygon"!==b?0:1;switch(b){case null:break;case"Point":if(!1===t(s,c,p,v,w))return!1;c++,v++;break;case"LineString":case"MultiPoint":for(n=0;n<s.length;n++){if(!1===t(s[n],c,p,v,w))return!1;c++,"MultiPoint"===b&&v++}"LineString"===b&&v++;break;case"Polygon":case"MultiLineString":for(n=0;n<s.length;n++){for(o=0;o<s[n].length-M;o++){if(!1===t(s[n][o],c,p,v,w))return!1;c++}"MultiLineString"===b&&v++,"Polygon"===b&&w++}"Polygon"===b&&v++;break;case"MultiPolygon":for(n=0;n<s.length;n++){for(o=w=0;o<s[n].length;o++){for(i=0;i<s[n][o].length-M;i++){if(!1===t(s[n][o][i],c,p,v,w))return!1;c++}w++}v++}break;case"GeometryCollection":for(n=0;n<m.geometries.length;n++)if(!1===P(m.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function n(e,t){for(var r,n,o,i,a,s,u,l,c,f=0,h="FeatureCollection"===e.type,g="Feature"===e.type,d=h?e.features.length:1,p=0;p<d;p++){for(a=h?e.features[p].geometry:g?e.geometry:e,u=h?e.features[p].properties:g?e.properties:{},l=h?e.features[p].bbox:g?e.bbox:void 0,c=h?e.features[p].id:g?e.id:void 0,i=(s=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,n=0;n<i;n++)if(null!==(o=s?a.geometries[n]:a))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(o,f,u,l,c))return!1;break;case"GeometryCollection":for(r=0;r<o.geometries.length;r++)if(!1===t(o.geometries[r],f,u,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,f,u,l,c))return!1;f++}}function s(e,l){n(e,function(e,t,r,n,o){var i,a=null===e?null:e.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return!1===l(d.feature(e,r,{bbox:n,id:o}),t,0)?!1:void 0}switch(a){case"MultiPoint":i="Point";break;case"MultiLineString":i="LineString";break;case"MultiPolygon":i="Polygon"}for(var s=0;s<e.coordinates.length;s++){var u={type:i,coordinates:e.coordinates[s]};if(!1===l(d.feature(u,r),t,s))return!1}})}function o(e,g){s(e,function(i,a,s){var u=0;if(i.geometry){var e=i.geometry.type;if("Point"!==e&&"MultiPoint"!==e){var l,c=0,f=0,h=0;return!1!==P(i,function(e,t,r,n,o){if(void 0===l||c<a||f<n||h<o)return l=e,c=a,f=n,h=o,void(u=0);n=d.lineString([l,e],i.properties);if(!1===g(n,a,s,o,u))return!1;u++,l=e})&&void 0}}})}function u(e,a){if(!e)throw new Error("geojson is required");s(e,function(e,t,r){if(null!==e.geometry){var n=e.geometry.type,o=e.geometry.coordinates;switch(n){case"LineString":if(!1===a(e,t,r,0,0))return!1;break;case"Polygon":for(var i=0;i<o.length;i++)if(!1===a(d.lineString(o[i],e.properties),t,r,i))return!1}}})}r.coordEach=P,r.coordReduce=function(e,i,a,t){var s=a;return P(e,function(e,t,r,n,o){s=0===t&&void 0===a?e:i(s,e,t,r,n,o)},t),s},r.propEach=i,r.propReduce=function(e,r,n){var o=n;return i(e,function(e,t){o=0===t&&void 0===n?e:r(o,e,t)}),o},r.featureEach=a,r.featureReduce=function(e,r,n){var o=n;return a(e,function(e,t){o=0===t&&void 0===n?e:r(o,e,t)}),o},r.coordAll=function(e){var t=[];return P(e,function(e){t.push(e)}),t},r.geomEach=n,r.geomReduce=function(e,i,a){var s=a;return n(e,function(e,t,r,n,o){s=0===t&&void 0===a?e:i(s,e,t,r,n,o)}),s},r.flattenEach=s,r.flattenReduce=function(e,n,o){var i=o;return s(e,function(e,t,r){i=0===t&&0===r&&void 0===o?e:n(i,e,t,r)}),i},r.segmentEach=o,r.segmentReduce=function(e,i,a){var s=a,u=!1;return o(e,function(e,t,r,n,o){s=!1===u&&void 0===a?e:i(s,e,t,r,n,o),u=!0}),s},r.lineEach=u,r.lineReduce=function(e,o,i){var a=i;return u(e,function(e,t,r,n){a=0===t&&void 0===i?e:o(a,e,t,r,n)}),a},r.findSegment=function(e,t){if(t=t||{},!d.isObject(t))throw new Error("options is invalid");var r,n=t.featureIndex||0,o=t.multiFeatureIndex||0,i=t.geometryIndex||0,a=t.segmentIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),s=s||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=u.length+a-1),d.lineString([u[a],u[a+1]],s,t);case"Polygon":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a-1),d.lineString([u[i][a],u[i][a+1]],s,t);case"MultiLineString":return o<0&&(o=u.length+o),a<0&&(a=u[o].length+a-1),d.lineString([u[o][a],u[o][a+1]],s,t);case"MultiPolygon":return o<0&&(o=u.length+o),i<0&&(i=u[o].length+i),a<0&&(a=u[o][i].length-a-1),d.lineString([u[o][i][a],u[o][i][a+1]],s,t)}throw new Error("geojson is invalid")},r.findPoint=function(e,t){if(t=t||{},!d.isObject(t))throw new Error("options is invalid");var r,n=t.featureIndex||0,o=t.multiFeatureIndex||0,i=t.geometryIndex||0,a=t.coordIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),s=s||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":return d.point(u,s,t);case"MultiPoint":return o<0&&(o=u.length+o),d.point(u[o],s,t);case"LineString":return a<0&&(a=u.length+a),d.point(u[a],s,t);case"Polygon":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a),d.point(u[i][a],s,t);case"MultiLineString":return o<0&&(o=u.length+o),a<0&&(a=u[o].length+a),d.point(u[o][a],s,t);case"MultiPolygon":return o<0&&(o=u.length+o),i<0&&(i=u[o].length+i),a<0&&(a=u[o][i].length-a),d.point(u[o][i][a],s,t)}throw new Error("geojson is invalid")}},{"@turf/helpers":5}]},{},[1])(1)});
